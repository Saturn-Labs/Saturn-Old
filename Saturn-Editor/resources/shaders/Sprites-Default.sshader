program:
    version: "330 core"
    vertex:
        includefile: "maths.sshaderinc"
        includefile: "cameramaths.sshaderinc"

        layout(location = 0) in vec3 VertexPosition;
        layout(location = 1) in vec4 Color;
        layout(location = 2) in vec2 TextureCoord;
        layout(location = 3) in float TextureIndex;
        layout(location = 4) in mat4 ObjectTransformation;

        out vec2 FragmentTextureCoord;
        out vec4 FragmentColor;
        out float FragmentTextureIndex;

        uniform mat4 Projection;
        uniform mat4 View;

        void vert()
        {
            FragmentColor = Color;
            FragmentTextureCoord = TextureCoord;
            FragmentTextureIndex = TextureIndex;

            Vertex_Out_Position = Projection * View * (ObjectTransformation *
                vec4(VertexPosition, 1.0));
        }
    :vertex
    fragment:
        includefile: "multisamplers.sshaderinc"

        in vec2 FragmentTextureCoord;
        in vec4 FragmentColor;
        in float FragmentTextureIndex;

        void frag()
        {
            Fragment_Out_Color = texture(getSamplerForIndex(int(FragmentTextureIndex)), FragmentTextureCoord) * FragmentColor;
        }
    :fragment
:program